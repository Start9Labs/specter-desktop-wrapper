id: specter 
title: Specter
version: 2.0.2
release-notes: | 
  * Update to v2.0.2, official release notes [here](https://github.com/cryptoadvance/specter-desktop/releases/tag/v2.0.1)
  * WARNING: While no data will be lost in this update, you will need to recreate your wallet(s).
license: mit
wrapper-repo: https://github.com/Start9Labs/specter-wrapper
upstream-repo: https://github.com/cryptoadvance/specter-desktop
support-site: https://github.com/cryptoadvance/specter-desktop/issues
marketing-site: https://specter.solutions
build: ["make"]
description:
  short: A user-friendly web GUI for Bitcoin Core with a focus on multisignature setup using hardware wallets and airgapped devices.
  long: Bitcoin Core has a very powerful command line interface and a wonderful daemon. Using PSBT and HWI it also works great with hardware wallets, but at the moment this is beyond most users. The same applies to multisignature setups. The goal of this project is to make a convenient and user-friendly GUI around Bitcoin Core with a focus on multisignature setup with hardware wallets and airgapped devices.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /root
    bitcoind: /mnt/bitcoind
health-checks:
  web-ui:
    name: Web UI
    success-message: Ready to be visited in a web browser
    type: script
config:
  get:
    type: script
  set:
    type: script
volumes:
  main:
    type: data
  bitcoind:
    type: pointer
    package-id: bitcoind
    volume-id: main
    path: /public
    readonly: false
interfaces:
  main:
    name: Specter Web Interface
    description: Specifies the Specter interface to listen on for HTTP connections.
    tor-config:
      port-mapping:
        80: "25441"
    lan-config:
      443:
        ssl: true
        internal: 25441
    ui: true
    protocols:
      - tcp
      - http
dependencies:
  btc-rpc-proxy:
    version: ">=0.3.2.1 <0.4.0"
    requirement:
      type: "opt-in"
      how: Alternatively you can use Bitcoin Core or Electrs
    description: Used for RPC permissioning.
    config:
      check:
        type: script
      auto-configure:
        type: script
  bitcoind:
    version: ">=23.0.0 <26.0.0"
    requirement:
      type: "opt-out"
      how: Alternatively you can use Bitcoin Proxy or Electrs
    description: Used to subscribe to new block events from a full archival node.
    config:
      check: 
        type: script
      auto-configure:
        type: script
  electrs:
    version: ">=0.9.13.1 <1.0.0"
    requirement:
      type: "opt-in"
      how: Alternatively you can use Bitcoin Core or Bitcoin Proxy
    description: Faster than connecting directly to bitcoin core.
  # mempool:
  #   version: ">=2.5.0.1 <2.6"
  #   requirement:
  #     type: "opt-in"
  #     how: "User selects block explorer"
  #   description: Use local mempool service
  #   config:
  #     check:
  #       type: script
  #     auto-configure:
  #       type: script 
backup:
  create:
    type: script
  restore:
    type: script
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
